esphome:
  name: eh_dor_sur
  platform: ESP8266
  board: nodemcu
  # Use a local copy of ESPHome
  includes:
    - arduino_port_expander.h
  on_boot:
    priority: -10
    then:
      - switch.turn_on: enable_ventana_switch

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

api:

ota:

i2c:
  id: i2ccomponent

logger:
  level: DEBUG

custom_component:
  - id: ape
    lambda: |-
      auto ape_component = new ArduinoPortExpander(i2ccomponent, 0x08);
      return {ape_component};

output:
- platform: custom
  type: binary
  lambda: |-
    return {ape_binary_output(ape, 7),
            ape_binary_output(ape, 6),
            ape_binary_output(ape, 5)};
  outputs:
    - id: gpio_relay_1
      inverted: true
    - id: gpio_relay_2
      inverted: true
    - id: gpio_relay_3
      inverted: true

light:
  - platform: binary
    id: luz_dormitorio_sur
    name: "Dormitorio Sur"
    output: gpio_relay_1
  - platform: binary
    id: luz_dormitorio_sur_cama_pared
    name: "Dormitorio Sur Cama Pared"
    output: gpio_relay_2
  - platform: binary
    id: luz_dormitorio_sur_cama_ventana
    name: "Dormitorio Sur Cama Ventana"
    output: gpio_relay_3


binary_sensor:
  - platform: status
    name: "Dormitorio Sur Status"
  - platform: custom
    lambda: |-
      return {ape_binary_sensor(ape, 2), // ribbon purple
              ape_binary_sensor(ape, 16), // ribbon white
              ape_binary_sensor(ape, 8), // ribbon verde
              ape_binary_sensor(ape, 1),
              ape_binary_sensor(ape, 0),
              ape_binary_sensor(ape, 9), //  "Cama Derecha, estaba en A4/A5"
              ape_binary_sensor(ape, 10), // "Cama Derecha"
              ape_binary_sensor(ape, 14)}; // ribbon red
    binary_sensors:
      - name: "Switch Puerta 1"
        internal: true
        on_state:
          then:
            - light.toggle: luz_dormitorio_sur
      - name: "Switch puerta 2"
        internal: true
        on_state:
          then:
            if:
              condition:
                or:
                  - light.is_on: luz_dormitorio_sur_cama_ventana
                  - light.is_on: luz_dormitorio_sur_cama_pared
              then:
                - light.turn_off: luz_dormitorio_sur_cama_ventana
                - light.turn_off: luz_dormitorio_sur_cama_pared
              else:
                - light.turn_on: luz_dormitorio_sur_cama_ventana
                - light.turn_on: luz_dormitorio_sur_cama_pared
      - name: "Switch puerta sur"
      - name: "Switch Cama Pared 1"
        internal: true
        on_state:
            then:
              - light.toggle: luz_dormitorio_sur_cama_pared
      - name: "Switch Cama Pared 2"
        internal: true
        on_state:
          then:
            - light.toggle: luz_dormitorio_sur
      - name: "Switch Cama Ventana 1"
        internal: true
        on_state:
          if:
            condition:
              lambda: 'return id(enable_ventana_switch).state;'
            then:
              light.toggle: luz_dormitorio_sur_cama_ventana
      - name: "Switch Cama Ventana 2"
        internal: true
        on_state:
          if:
            condition:
              lambda: 'return id(enable_ventana_switch).state;'
            then:
              light.toggle: luz_dormitorio_sur
      - name: "Ventana Dormitorio Sur"
        device_class: window

switch:
  - platform: restart
    name: "Dormitorio Sur Restart"
  - platform: template
    id: enable_ventana_switch
    name: "Habilitar Switch Ventana Dormitorio Sur"
    optimistic: true
